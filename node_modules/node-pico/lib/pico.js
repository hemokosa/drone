"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Processor = require("./processor");

var processor = new Processor();

var Pico = (function () {
  function Pico() {
    _classCallCheck(this, Pico);
  }

  _createClass(Pico, [{
    key: "bind",
    value: function bind(klass) {
      processor.bind(klass);
    }
  }, {
    key: "play",
    value: function play(audioprocess) {
      processor.play(audioprocess);
    }
  }, {
    key: "pause",
    value: function pause() {
      processor.pause();
    }
  }, {
    key: "env",
    get: function get() {
      return processor.env;
    }
  }, {
    key: "sampleRate",
    get: function get() {
      return processor.sampleRate;
    }
  }, {
    key: "bufferSize",
    get: function get() {
      return processor.bufferSize;
    }
  }, {
    key: "isPlaying",
    get: function get() {
      return processor.isPlaying;
    }
  }]);

  return Pico;
})();

module.exports = new Pico();