"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var SWFID = "PicoFlashFallbackPlayer" + Date.now();

var FlashFallbackPlayer = (function () {
  function FlashFallbackPlayer(processor) {
    _classCallCheck(this, FlashFallbackPlayer);

    this.env = "flashfallback";
    this.sampleRate = 44100;
    this.bufferLength = 2048;
    this.processor = processor;

    this._timerId = 0;
    this._timerAPI = global;
  }

  _createClass(FlashFallbackPlayer, [{
    key: "play",
    value: function play() {
      var _this = this;

      if (FlashFallbackPlayer.swf && this._timerId === 0) {
        (function () {
          var processor = _this.processor;
          var bufferLength = _this.bufferLength;
          var bufL = new Float32Array(bufferLength);
          var bufR = new Float32Array(bufferLength);
          var out = new Array(bufferLength * 2);
          var written = 0;
          var startTime = Date.now();
          var writtenIncr = bufferLength / _this.sampleRate * 1000;

          _this._timerId = _this._timerAPI.setInterval(function () {
            if (written < Date.now() - startTime) {
              var x = undefined;

              processor.process(bufL, bufR);

              for (var i = 0, j = 0; i < bufferLength; i++) {
                x = bufL[i] * 16384 + 32768 | 0;
                x = Math.max(16384, Math.min(x, 49152));
                out[j++] = String.fromCharCode(x);

                x = bufR[i] * 16384 + 32768 | 0;
                x = Math.max(16384, Math.min(x, 49152));
                out[j++] = String.fromCharCode(x);
              }

              FlashFallbackPlayer.swf.write(out.join(""));

              written += writtenIncr;
            }
          }, 25);
          FlashFallbackPlayer.swf.play();
        })();
      }
    }
  }, {
    key: "pause",
    value: function pause() {
      if (FlashFallbackPlayer.swf && this._timerId !== 0) {
        this._timerAPI.clearInterval(this._timerId);
        this._timerId = 0;
        FlashFallbackPlayer.swf.pause();
      }
    }
  }]);

  return FlashFallbackPlayer;
})();

function getPicoSwfUrl() {
  var scripts = global.document.getElementsByTagName("script");

  for (var i = 0; i < scripts.length; i++) {
    var matched = scripts[i].src.match(/^(.*\/)pico(?:\.min)?\.js$/);

    if (matched) {
      return matched[1] + "pico.swf";
    }
  }
  return "pico.swf";
}

function createFlashContainer(swfId) {
  var container = global.document.createElement("div");
  var object = global.document.createElement("object");
  var param = global.document.createElement("param");

  param.setAttribute("name", "allowScriptAccess");
  param.setAttribute("value", "always");

  object.id = swfId;
  object.classid = "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000";
  object.width = 1;
  object.height = 1;
  object.setAttribute("data", getPicoSwfUrl() + "?" + Date.now());
  object.setAttribute("type", "application/x-shockwave-flash");

  container.style.position = "fixed";
  container.style.left = 0;
  container.style.top = 0;
  container.style.width = "1px";
  container.style.height = "1px";

  object.appendChild(param);
  container.appendChild(object);

  return container;
}

FlashFallbackPlayer.fallback = function (Pico) {
  global.picojs$flashfallback = function () {
    Pico.bind(FlashFallbackPlayer);
    delete global.picojs$flashfallback;
  };

  global.window.addEventListener("load", function () {
    global.document.body.appendChild(createFlashContainer(SWFID));
    FlashFallbackPlayer.swf = global.document.getElementById(SWFID);
  });
};

module.exports = FlashFallbackPlayer;