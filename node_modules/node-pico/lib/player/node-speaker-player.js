"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Driver = require("pico.driver.nodeaudio");

var NodeSpeakerPlayer = (function () {
  function NodeSpeakerPlayer(processor) {
    _classCallCheck(this, NodeSpeakerPlayer);

    this._driver = new Driver();
    this._driver.setup({ sampleRate: 44100, bufferLength: 2048 });
    this._driver.processor = processor;

    this.env = "webaudio";
    this.bufferLength = this._driver.bufferLength;
    this.sampleRate = this._driver.sampleRate;
  }

  _createClass(NodeSpeakerPlayer, [{
    key: "play",
    value: function play() {
      this._driver.start();
    }
  }, {
    key: "pause",
    value: function pause() {
      this._driver.stop();
    }
  }]);

  return NodeSpeakerPlayer;
})();

module.exports = NodeSpeakerPlayer;